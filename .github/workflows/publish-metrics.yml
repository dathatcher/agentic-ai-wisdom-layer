name: publish-metrics

on:
  workflow_dispatch:

jobs:
  generate-and-publish-report:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Git Config
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@users.noreply.github.com"

      - name: Generate versioned report
         run: |
         mkdir -p report
          TODAY=$(date -u +%F)
         REPORT_FILE="report/${TODAY}.html"

         echo "<html><head><title>Dev Metrics ${TODAY}</title>" > $REPORT_FILE
         echo "<script src='https://cdn.jsdelivr.net/npm/chart.js'></script>" >> $REPORT_FILE
         echo "<style>body{font-family:sans-serif;padding:2em;} h1,h2{color:#333} canvas{max-width:700px;}</style></head><body>" >> $REPORT_FILE
         echo "<h1>ðŸ“Š Developer Metrics - $TODAY</h1>" >> $REPORT_FILE
         echo "<p><strong>Branch:</strong> $GITHUB_REF</p>" >> $REPORT_FILE

         echo "<h2>ðŸ”¢ Total Commits:</h2><p>$(git rev-list --count HEAD)</p>" >> $REPORT_FILE

      # Extract top 5 contributors
        git shortlog -s -n | head -5 > tmp_contrib.txt
        NAMES=$(awk '{$1=""; print $0}' tmp_contrib.txt | sed 's/^ *//' | jq -R . | jq -s .)
        COUNTS=$(awk '{print $1}' tmp_contrib.txt | jq -R . | jq -s .)

        echo "<h2>ðŸ‘¥ Top Contributors (Bar Chart):</h2><canvas id='contribChart'></canvas>" >> $REPORT_FILE
        echo "<script>
        new Chart(document.getElementById('contribChart'), {
        type: 'bar',
        data: {
          labels: $NAMES,
          datasets: [{
            label: 'Commits',
            data: $COUNTS,
            backgroundColor: 'rgba(54, 162, 235, 0.7)'
          }]
        },
        options: {
          responsive: true,
          scales: { y: { beginAtZero: true } }
        }
      });
    </script>" >> $REPORT_FILE

    # Commits per day in last 7 days
    git log --since="7 days ago" --pretty=format:"%ad" --date=short | sort | uniq -c | awk '{print $2, $1}' > tmp_daily.txt
    DAYS=$(awk '{print $1}' tmp_daily.txt | jq -R . | jq -s .)
    COUNTS=$(awk '{print $2}' tmp_daily.txt | jq -R . | jq -s .)

    echo "<h2>ðŸ“ˆ Commits Per Day (Last 7):</h2><canvas id='lineChart'></canvas>" >> $REPORT_FILE
    echo "<script>
    new Chart(document.getElementById('lineChart'), {
    type: 'line',
    data: {
          labels: $DAYS,
          datasets: [{
            label: 'Commits per Day',
            data: $COUNTS,
            borderColor: 'rgba(255,99,132,1)',
            backgroundColor: 'rgba(255,99,132,0.2)',
            fill: true,
            tension: 0.2
          }]
        },
        options: {
          responsive: true,
          scales: {
            y: { beginAtZero: true }
          }
        }
      });
    </script>" >> $REPORT_FILE

    echo "<h2>ðŸ§  Last 5 Commits:</h2><pre>" >> $REPORT_FILE
    git log --pretty=format:"%h - %an: %s" -n 5 >> $REPORT_FILE
    echo "</pre></body></html>" >> $REPORT_FILE

      - name: Prepare Dashboard (index.html)
        run: |
          mkdir -p report
          echo "<html><head><title>Metrics Dashboard</title></head><body><h1>ðŸ§­ Dev Metrics Dashboard</h1><ul>" > report/index.html
          for file in $(ls report/*.html | grep -v index.html); do
            fname=$(basename $file)
            echo "<li><a href=\"$fname\">$fname</a></li>" >> report/index.html
          done
          echo "</ul></body></html>" >> report/index.html

      - name: Disable Jekyll processing
        run: touch report/.nojekyll

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./report
