name: Deploy Wisdom Layer from GHCR

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Enter the version to deploy (e.g., 1.5)'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 🕒 Set deployment timestamp
      id: set_time
      run: echo "timestamp=$(date +'%Y-%m-%dT%H-%M-%S')" >> "$GITHUB_OUTPUT"

    - name: 📄 Create deployment script on remote
      run: |
        cat <<'EOF' > deploy.sh
        #!/bin/bash
        TIMESTAMP="$1"
        LOGFILE="deploy-${TIMESTAMP}.log"

        {
          echo "🔍 Ensuring Docker is installed..."
          which docker || (sudo apt update && sudo apt install -y docker.io)

          echo "🔐 Logging into GHCR..."
          docker login ghcr.io -u dathatcher -p ${{ secrets.GHCR_PAT }}

          echo "📄 Creating updated .env file..."
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > /home/ubuntu/.env

          echo "📥 Pulling new image..."
          docker pull ghcr.io/dathatcher/wisdom-layer-poc:${{ github.event.inputs.version }}

          echo "🧹 Stopping and removing old container..."
          docker stop wisdom || true
          docker rm wisdom || true
          docker rmi ghcr.io/dathatcher/wisdom-layer-poc:latest || true

          echo "🚀 Running new container..."
          docker run -d \
            --env-file /home/ubuntu/.env \
            -p 8501:8501 \
            --name wisdom \
            ghcr.io/dathatcher/wisdom-layer-poc:${{ github.event.inputs.version }}

          echo "✅ Wisdom Layer is deployed at http://${{ secrets.SSH_HOST }}:8501"

          echo "🧹 Cleaning up unused Docker resources..."
          docker system prune -a -f

        } 2>&1 | tee "$LOGFILE"
        EOF

    - name: 🚀 SSH and Deploy with logging
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          TIMESTAMP="${{ steps.set_time.outputs.timestamp }}"
          bash -c "bash deploy.sh $TIMESTAMP"

    - name: 📤 SCP log file back to GitHub runner
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        source: "deploy-${{ steps.set_time.outputs.timestamp }}.log"
        target: "./"

    - name: 📎 Upload deploy log as artifact
      uses: actions/upload-artifact@v4
      with:
        name: deploy-log-${{ steps.set_time.outputs.timestamp }}
        path: deploy-${{ steps.set_time.outputs.timestamp }}.log
        retention-days: 7
